big_craftables <-
read.csv("data-raw/files/BigCraftables.csv", row.names = FALSE)
big_craftables <-
read.csv("data-raw/files/Big Craftables.csv", row.names = FALSE)
big_craftables <-
read.csv("data-raw/files/Big Craftables.csv", stringsAsFactors = FALSE)
View(big_craftables)
?read.csv
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv",
row.names = 1,
stringsAsFactors = FALSE)
View(big_craftables)
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv",
stringsAsFactors = FALSE)
View(big_craftables)
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv",
header = TRUE
stringsAsFactors = FALSE)
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(big_craftables)
crops <-
read.csv(file = "data-raw/files/Crops.csv",
header = TRUE,
stringsAsFactors = FALSE)
crops <-
read.csv(file = "data-raw/files/Crops.csv",
stringsAsFactors = FALSE)
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(big_craftables)
crops <-
read.csv(file = "data-raw/files/Crops.csv",
stringsAsFactors = FALSE)
crops <-
read_csv(file = "data-raw/files/Crops.csv",
stringsAsFactors = FALSE)
?read_csv
??read.csv
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv",
stringsAsFactors = FALSE)
?readr::read_csv
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv")
View(crops)
big_craftables <-
read.csv(file = "data-raw/files/Big Craftables.csv")
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv")
View(big_craftables)
?tolower
?usethis::use_package
?usethis::use_package(package = "magrittr", type = "suggests")
?gsub
#' Takes as input a character type and returns a character type with lower case
#' and no whitespace.
#'
#' @param x_char a character type
#'
#' @return a character type in lower case with whitespace removed
#' @export
#'
#' @examples
#' make_snake_case(x_char = ("camelCase", "char with spaces"))
make_snake_case <- function(x_char) {
x_char <-
tolower(x = x_char) %>%
gsub(pattern = " ", replacement = "", x = x_char)
return(x_char)
}
make_snake_case(x_char = ("camelCase", "char with spaces"))
make_snake_case(x_char = c("camelCase", "char with spaces"))
library(magrittr)
make_snake_case(x_char = c("camelCase", "char with spaces"))
#' Takes as input a character type and returns a character type with lower case
#' and underscores instead of whitespace
#'
#' @param x_char a character type
#'
#' @return a character type in lower case with whitespace removed
#' @export
#'
#' @examples
#' make_snake_case(x_char = c("camelCase", "char with  spaces"))
make_snake_case <- function(x_char) {
x_char <-
tolower(x = x_char) %>%
gsub(pattern = " +", replacement = "_", x = x_char)
return(x_char)
}
make_snake_case(x_char = c("camelCase", "char with  spaces"))
tolower("camelCase")
#' Takes as input a character type and returns a character type with lower case
#' and underscores instead of whitespace
#'
#' @param x_char a character type
#'
#' @return a character type in lower case with whitespace removed
#' @export
#'
#' @examples
#' make_snake_case(x_char = c("camelCase", "char with  spaces"))
make_snake_case <- function(x_char) {
x_char <-
tolower(x = x_char) %>%
gsub(pattern = " +", replacement = "_", x = x_char)
return(x_char)
}
make_snake_case(x_char = c("camelCase", "char with  spaces"))
make_snake_case(x_char = "camelCase")
(x_char = "camelCase")
x_char <-
tolower(x = x_char) %>%
gsub(pattern = " +", replacement = "_", x = x_char)
x_char
?tolower
tolower(x = x_char)
x_char <-
tolower(x = x_char) %>%
gsub(pattern = " +", replacement = "_")
return(x_char)
x_char
usethis::use_test("utils_make_snake_case")
?expect_equal
devtools::test()
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv")
colnames(big_craftables)
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv")
problems(...)
problems()
dim(big_craftables)
View(big_craftables)
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv") %>%
rstardew::make_snake_case()
View(big_craftables)
return(x_data)
make_cols_snake_case(x_data = data.frame("Space  Col" = c(1,2,3)))
#' Lowercases the column names of a matrix or data.frame, and replaces spaces
#' with underscores.
#'
#' @param x_data a data.frame or matrix with column names
#'
#' @return a data.frame or matrix with snake case column names
#' @export
#'
#' @examples
#' make_cols_snake_case(x_data = data.frame("Space  Col" = c(1,2,3)))
make_cols_snake_case <- function(x_data) {
colnames(x_data) <-make_snake_case(x_char = colnames(x_data))
return(x_data)
}
make_cols_snake_case(x_data = data.frame("Space  Col" = c(1,2,3)))
colnames(x_data)
x_data = data.frame(`Space  Col`` = c(1,2,3)))
)
x_data
)
))
''
``
make_cols_snake_case(x_data = data.frame(`Space  Col`` = c(1,2,3)))
)
)
``
data.frame(`Space  Col` = c(1,2,3))
make_cols_snake_case(x_data =
data.frame("Space  Col" = c(1,2,3),
check.names = FALSE))
x_data
x_data =
data.frame("Space  Col" = c(1,2,3),
check.names = FALSE)
x_data
rstardew::make_snake_case(x_char = colnames(x_data))
#'
#' @param x_data a data.frame or matrix with column names
#'
#' @return a data.frame or matrix with snake case column names
#' @export
#'
#' @examples
#' make_cols_snake_case(x_data =
#' data.frame("Space  Col" = c(1,2,3),
#' check.names = FALSE))
make_cols_snake_case <- function(x_data) {
colnames(x_data) <- rstardew::make_snake_case(x_char = colnames(x_data))
return(x_data)
}
make_cols_snake_case(x_data =
data.frame("Space  Col" = c(1,2,3),
check.names = FALSE))
gsub("\\.", "", ".")
usethis::use_test("make_cols_snake_case")
?expect_equal
test_that("make_cols_snake_case() removes spaces and lowercases", {
expect_equal(object =
make_cols_snake_case(x_data =
data.frame("Space  Col" = c(1,2,3),
check.names = FALSE)),
expected = data.frame(space_col = c(1,2,3)))
})
devtools::test()
devtools::document()
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv") %>%
rstardew::make_cols_snake_case()
View(big_craftables)
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv") %>%
rstardew::make_cols_snake_case()
view(crops)
View(crops)
source('~/Projects/rstardew/R/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/R/crops.R', echo=TRUE)
furniture <-
read.csv(file = "data-raw/furniture.csv") %>%
rstardew::make_cols_snake_case()
furniture <-
read.csv(file = "data-raw/Furniture.csv") %>%
rstardew::make_cols_snake_case()
furniture <-
read.csv(file = "data-raw/files/Furniture.csv") %>%
rstardew::make_cols_snake_case()
View(furniture)
furniture <-
read.csv(file = "data-raw/files/Furniture.csv") %>%
rstardew::make_cols_snake_case() %>%
dplyr::separate(col = source_rectangle,
into = c("source_rectangle_width", "source_rectangle_height"),
sep = " ",
fill = "right")
furniture <-
read.csv(file = "data-raw/files/Furniture.csv") %>%
rstardew::make_cols_snake_case() %>%
tidyr::separate(col = source_rectangle,
into = c("source_rectangle_width", "source_rectangle_height"),
sep = " ",
fill = "right")
View(furniture)
furniture <-
read.csv(file = "data-raw/files/Furniture.csv") %>%
rstardew::make_cols_snake_case() %>%
tidyr::separate(col = source_rectangle,
into = c("source_rectangle_width", "source_rectangle_height"),
sep = " ",
fill = "right") %>%
tidyr::separate(col = bounding_box,
into = c("bounding_box_width", "bounding_box_height"),
sep = " ",
fill = "right")
View(furniture)
source('~/Projects/rstardew/R/furniture.R', echo=TRUE)
furniture <-
readr::read_csv(file = "data-raw/files/Furniture.csv") %>%
rstardew::make_cols_snake_case() %>%
tidyr::separate(col = source_rectangle,
into = c("source_rectangle_width", "source_rectangle_height"),
sep = " ",
fill = "right") %>%
tidyr::separate(col = bounding_box,
into = c("bounding_box_width", "bounding_box_height"),
sep = " ",
fill = "right")
hats <-
readr::read_csv(file = "data-raw/files/Hats.csv")
View(hats)
hats <-
readr::read_csv(file = "data-raw/files/Hats.csv") %>%
rstardew::make_cols_snake_case()
source('~/Projects/rstardew/R/hats.R', echo=TRUE)
weapons <-
readr::read_csv(file = "data-raw/files/Weapons.csv")
View(weapons)
source('~/Projects/rstardew/data-raw/weapons.R', echo=TRUE)
objects <-
readr::read_csv(file = "data-raw/files/Objects.csv")
View(objects)
source('~/Projects/rstardew/data-raw/crops.R', echo=TRUE)
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv") %>%
rstardew::make_cols_snake_case()
problems(...)
readr::problems()
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv") %>%
rstardew::make_cols_snake_case()
readr::problems()
problems(crops)
readr::problems(crops)
length(c("ObjectId","Days in Stage 1 Growth","Days in Stage 2 Growth","Days in Stage 3 Growth","Days in Stage 4 Growth","Days in Stage 5 Growth","Growth Seasons","Index In Sprite Sheet","Index Of Harvest","Regrow After Harvest","Harvest Method","Chance For Extra Harvest","Min Extra Harvest","Max Extra Harvest","Max Harvest Increase Per Farming Level","Chance For Extra Crops","Raised Seeds","Tint Color"))
length(c("491","1","1","1","1","NA","fall","19","278","-1","0","false","NA","NA","NA","NA","false","false",,))
length(c("491","1","1","1","1","NA","fall","19","278","-1","0","false","NA","NA","NA","NA","false","false","",""))
dim(crops)
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv") %>%
rstardew::make_cols_snake_case()
crops <-
readr::read_csv(file = "data-raw/files/Crops.csv") %>%
rstardew::make_cols_snake_case()
View(crops)
source('~/Projects/rstardew/data-raw/weapons.R', echo=TRUE)
source('~/Projects/rstardew/R/hats.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/crops.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/furniture.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/crops.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/weapons.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/furniture.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/crops.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/weapons.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
lenghtc("ObjectId","Name","Description","SkipHairDraw","IgnoreHairstyleOffset")
lenght(c("ObjectId","Name","Description","SkipHairDraw","IgnoreHairstyleOffset"))
length(c("ObjectId","Name","Description","SkipHairDraw","IgnoreHairstyleOffset"))
length(c("45","Logo Cap","A red cap with a logo on the front.","false","true"))
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
length("46","Wearable Dwarf Helm","A slightly larger, human sized version of the helmets worn by dwarves.","hide","true")
length(c("46","Wearable Dwarf Helm","A slightly larger, human sized version of the helmets worn by dwarves.","hide","true"))
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/crops.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/furniture.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/weapons.R', echo=TRUE)
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv") %>%
rstardew::make_cols_snake_case()
source('~/Projects/rstardew/data-raw/hats.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
source('~/Projects/rstardew/data-raw/big_craftables.R', echo=TRUE)
length(c("151","Marble Brazier","500","-300","Crafting","-9","Provides a moderate amount of light.","true","true","0","Marble Brazier"))
length(c("152","Wood Lamp-post","50","-300","Crafting","-9","Provides a good amount of light.","true","true","0","true","Wood Lamp-post"))
View(big_craftables)
View(big_craftables[87:89,])
View(big_craftables[80:89,])
big_craftables <-
readr::read_csv(file = "data-raw/files/Big Craftables.csv") %>%
rstardew::make_cols_snake_case()
hats <-
readr::read_csv(file = "data-raw/files/Hats.csv") %>%
rstardew::make_cols_snake_case()
View(hats[55:65])
View(hats[55:65,])
View(hats[58:62,])
length(c("72","Green Turban","A green silk turban with a gold ornament on the front.","false","true"
))
length(c("73","Magic Cowboy Hat","It's shimmering with prismatic energy","false","true","Prismatic"
))
length(c("74","Magic Turban","It's shimmering with prismatic energy","false","true","Prismatic"
))
79.56	 + (81.50)/2
